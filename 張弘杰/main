import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
import numpy as np

# 讀取銷售資料
sales_df = pd.read_excel(r"C:\Users\lichu\OneDrive\桌面\vs\深度\泡麵銷量資料_1000筆_自訂版.xlsx")

# 特徵處理：統一季節格式
sales_df['季節'] = sales_df['季節'].replace({'春天': '春', '夏天': '夏', '秋天': '秋', '冬天': '冬'})

# 將類別特徵轉換成數字（Label Encoding）
le_season = LabelEncoder()
le_weather = LabelEncoder()
le_noodle = LabelEncoder()

sales_df['季節編碼'] = le_season.fit_transform(sales_df['季節'])
sales_df['天氣編碼'] = le_weather.fit_transform(sales_df['天氣'])
sales_df['泡麵編碼'] = le_noodle.fit_transform(sales_df['泡麵名稱'])

# 定義特徵X跟目標y
X = sales_df[['季節編碼', '天氣編碼', '泡麵編碼']]
y = sales_df['銷量']

# 切分訓練集和測試集
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 建立隨機森林回歸模型
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# 預測測試集
y_pred = model.predict(X_test)

# 計算模型評估指標
mae = mean_absolute_error(y_test, y_pred)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)

print(f"✅ 測試集MAE（平均絕對誤差）：{mae:.2f}")
print(f"✅ 測試集RMSE（均方根誤差）：{rmse:.2f}")
print(f"✅ 測試集R2分數（決定係數）：{r2:.2f}")

# ========================================
# 用來預測未來7天
# ========================================

# 讀取未來7天的季節天氣資料
future_df = pd.DataFrame({
    '日期': ['2025-04-25', '2025-04-26', '2025-04-27', '2025-04-28', '2025-04-29', '2025-04-30', '2025-05-01'],
    '季節': ['春', '春', '春', '春', '春', '春', '春'],
    '天氣': ['雨天', '陰天', '雨天', '雨天', '晴天', '陰天', '晴天']
})

# 把未來7天每個日期都展開成各個泡麵
noodle_names = le_noodle.classes_
predictions = []

for _, row in future_df.iterrows():
    for noodle in noodle_names:
        temp = {
            '日期': row['日期'],
            '季節': row['季節'],
            '天氣': row['天氣'],
            '泡麵名稱': noodle
        }
        # 編碼
        temp['季節編碼'] = le_season.transform([row['季節']])[0]
        temp['天氣編碼'] = le_weather.transform([row['天氣']])[0]
        temp['泡麵編碼'] = le_noodle.transform([noodle])[0]
        
        # 預測
        input_features = [[temp['季節編碼'], temp['天氣編碼'], temp['泡麵編碼']]]
        predicted_sales = model.predict(input_features)[0]
        
        temp['備貨量'] = round(predicted_sales)
        predictions.append(temp)

# 整理成DataFrame
future_sales_df = pd.DataFrame(predictions)

# 輸出成Excel
future_sales_df[['日期', '季節', '天氣', '泡麵名稱', '備貨量']].to_excel('未來7天泡麵備貨量預測.xlsx', index=False)

print("✅ 未來7天泡麵備貨量預測已儲存為 '未來7天泡麵備貨量預測.xlsx'！")
